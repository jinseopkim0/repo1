# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 7200s # 2 hours
substitutions:
  _IMAGE_NAME: "test-image"
steps:
  # Library generation build
  - id: library-generation-image-build
    name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args:
    - -c
    - |
      docker buildx build \
      -f .cloudbuild/library_generation/library_generation.Dockerfile \
      -t "${_IMAGE_NAME}" \
      -o type=image \
      .
    waitFor: ["-"]
  - id: run-integration-test
    name: python:3.12
    entrypoint: bash
    args:
    - -c
    - |
      # copy generator JAR
      apt-get update && apt-get install -y maven
      # install docker engine
      curl -fsSL https://get.docker.com -o get-docker.sh
      chmod +x get-docker.sh
      sh get-docker.sh
      python -m venv .venv
      source .venv/bin/activate 
      pip install --upgrade pip
      pip install --require-hashes -r library_generation/requirements.txt
      pip install ./library_generation
      python -m unittest ./library_generation/test/integration_tests.py
    waitFor: ["library-generation-image-build"]

options:
  # Builds ran by service accounts we need to either a) specify a logs bucket,
  # b) use REGIONAL_USER_OWNER_BUCKET, or c) use CLOUD_LOGGING_ONLY. We go for c)
  logging: CLOUD_LOGGING_ONLY
